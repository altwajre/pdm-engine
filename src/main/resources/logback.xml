<configuration>

    <property name="LOG_HOME" value="d:\\log"/>

    <appender name="JOBFILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <File>${LOG_HOME}/job.log</File>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d %5p [ %F:%L ] - %m%n</pattern>
        </layout>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <FileNamePattern>${LOG_HOME}/job%i.log</FileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>10</maxIndex>
        </rollingPolicy>
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10240KB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- 异步输出 -->
    <appender name ="JOBASYNC" class= "ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold >0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 超过队列长度，扔掉信息，不阻塞应用线程-->
        <neverBlock>true</neverBlock>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref ="JOBFILE"/>
    </appender>

    <appender name="TIMERFILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <File>${LOG_HOME}/timer.log</File>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </layout>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <FileNamePattern>${LOG_HOME}/timer%i.log</FileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>10</maxIndex>
        </rollingPolicy>
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10240KB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- 异步输出 -->
    <appender name ="TIMERASYNC" class= "ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold >0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 超过队列长度，扔掉信息，不阻塞应用线程-->
        <neverBlock>true</neverBlock>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref ="TIMERFILE"/>
    </appender>

    <appender name="LOGBACKFILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <File>${LOG_HOME}/logback.log</File>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d %5p [ %F:%L ] - %m%n</pattern>
        </layout>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <FileNamePattern>${LOG_HOME}/logback%i.log</FileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>10</maxIndex>
        </rollingPolicy>
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10240KB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- 异步输出 -->
    <appender name ="LOGBACKASYNC" class= "ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold >0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 超过队列长度，扔掉信息，不阻塞应用线程-->
        <neverBlock>true</neverBlock>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref ="LOGBACKFILE"/>
    </appender>

    <appender name="HTTPGETFILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <File>${LOG_HOME}/httpGet.log</File>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d %5p [ %F:%L ] - %m%n</pattern>
        </layout>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <FileNamePattern>${LOG_HOME}/httpGet%i.log</FileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>10</maxIndex>
        </rollingPolicy>
        <triggeringPolicy
                class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10240KB</MaxFileSize>
        </triggeringPolicy>
    </appender>

    <!-- 异步输出 -->
    <appender name ="HTTPGETASYNC" class= "ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold >0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 超过队列长度，扔掉信息，不阻塞应用线程-->
        <neverBlock>true</neverBlock>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref ="HTTPGETFILE"/>
    </appender>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>
                %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
            </pattern>
        </encoder>
    </appender>

    <logger name="cn.betasoft.pdm.engine.scheduler">
        <level value="INFO"/>
        <appender-ref ref="JOBASYNC"/>
    </logger>

    <logger name="monitor.timer">
        <level value="INFO"/>
        <appender-ref ref="TIMERASYNC"/>
    </logger>

    <logger name="cn.betasoft.pdm.engine.actor.HttpGetDataActor">
        <level value="info"/>
        <appender-ref ref="HTTPGETASYNC"/>
    </logger>

    <logger name="monitor.logback">
        <level value="INFO"/>
        <appender-ref ref="LOGBACKASYNC"/>
    </logger>

    <root level="info">
        <appender-ref ref="STDOUT"/>
    </root>
</configuration>